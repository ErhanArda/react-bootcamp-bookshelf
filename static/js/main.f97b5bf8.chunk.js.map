{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/HomePage/HomePage.js","state/ducks/books/actions.js","state/ducks/books/actionTypes.js","containers/HomePage/index.js","containers/AddBook/AddBook.js","routes.js","containers/BookDetails/BookDetails.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/Main/index.js","components/Main/Main.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/HomePage/BookStyles.js","components/HomePage/Book.js","components/HomePage/Books.js","components/HomePage/FilterSortBarStyles.js","components/HomePage/FilterSortBar.js","components/BookInfos/BookInfos.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","HomePage","props","state","activePage","view","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","searchTerm","toLowerCase","indexOf","author","sortedBooks","sortTerm","sort","book1","book2","parseInt","length","items","slice","console","log","Math","ceil","PaginationArray","Array","fill","Container","ButtonGroup","Button","setState","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","href","e","preventDefault","previous","page","index","pageNum","active","next","last","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","connect","AddBook","id","routerProps","match","params","isEdit","componentProps","Row","Col","xs","React","routes","path","exact","component","selectedBooks","MainLayout","document","Children","children","Main","route","Comp","validationSchema","Yup","shape","required","review","min","addBook","values","history","dispacth","post","push","editBook","put","AddBookForm","withRouter","initialValues","description","rating","imageUrl","status","goodReads","onSubmit","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","StyledBook","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardLink","target","rel","CardText","Books","item","md","lg","StyledNavbarText","StyledInputGroup","InputGroup","changeFilter","search","activeFilter","fluid","style","padding","InputGroupAddon","addonType","InputGroupText","BookInfos","App","Boolean","window","location","hostname","initialState","reducers","action","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f97b5bf8.chunk.js","sourcesContent":["const navigation = {\n    left: [\n        {\n            title: \"Home Page\",\n            to: \"/react-bootcamp-bookshelf\"\n        },\n        {\n            title: \"Read Books\",\n            to: \"/read-books\"\n        },\n    ],\n    right: [\n        {\n            title:\"+ Add Book\",\n            to:\"/add-book\"\n        }\n    ]\n}\n\n\nexport default navigation","import Header from \"./Header\"\n\nexport default Header","import React, { useState } from 'react';\nimport \"./styles\"\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText\n} from 'reactstrap';\nimport navigation from \"../../navigation\"\nimport { Link } from \"react-router-dom\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"md\">\n                <NavbarBrand tag={Link} to=\"/react-bootcamp-bookshelf\">Bookshelf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        {\n                            navigation.left.map((nav) => {\n                                return <NavItem>\n                                    <NavLink tag={Link} to={nav.to}>{nav.title}</NavLink>\n                                </NavItem>\n                            }\n                            )\n                        }\n                    </Nav>\n                    {\n                        navigation.right.map((nav) => {\n                            return <NavbarText>\n                                <NavLink tag={Link} to={nav.to}>\n                                    {nav.title}\n                                </NavLink>\n                            </NavbarText>\n                        }\n                        )\n                    }\n                </Collapse>\n            </Navbar>\n        </div>\n\n    )\n}\n\nexport default Header\n","export const categories = [\n    \"JavaScript\",\n    \"HTML\",\n    \"CSS\",\n    \"Python\",\n    \"Java\"\n]\nexport const ratings = [1, 2, 3, 4, 5]\n\nexport const statuses = [\"Not Read\", \"Read\"]\n\nexport const apiHost =\"https://5ebaac0e3f97140016992b17.mockapi.io/\"\n\nexport const itemsPerPage = 4","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Books, FilterSortBar } from \"../../components\"\nimport { getBooks } from \"../../state/ducks/books/actions\"\nimport { Container, Pagination, PaginationItem, PaginationLink,ButtonGroup, Button } from 'reactstrap'\nimport { itemsPerPage } from \"../../constants\"\n\nexport class HomePage extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n        this.state = {\n            activePage: 1,\n            view: \"cards\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.getBooks()\n    }\n\n\n    render() {\n        if (this.props.loading) {\n            return <h1>Books are loading...</h1>\n        }\n        //console.log(\"filter\",this.props.filter)\n        const allBooks = this.props.books;\n        let filteredBooks = []\n        // filter for category\n        if (this.props.filter) {\n            filteredBooks = allBooks.filter((book) => {\n                return book.category === this.props.filter\n            })\n        } else {\n            filteredBooks = allBooks\n        }\n\n        //filter for searchTerm\n        if (this.props.searchTerm) {\n            filteredBooks = filteredBooks.filter((book) => {\n                return book.title.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1 || book.author.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1\n\n            })\n        }\n\n        //Sorting\n        let sortedBooks = [];\n        if (this.props.sortTerm) {\n            sortedBooks = [...filteredBooks].sort((book1, book2) => {\n                return parseInt(book2[this.props.sortTerm]) - parseInt(book1[this.props.sortTerm])\n            })\n        } else {\n            sortedBooks = filteredBooks\n        }\n\n\n        let books = \"\";\n        if (sortedBooks.length < 1) {\n            books = <h2>NO BOOK HERE</h2>\n        }\n        else {\n            books = <Books view={this.state.view} items={sortedBooks.slice(itemsPerPage * (this.state.activePage - 1), itemsPerPage * this.state.activePage)} />\n\n        }\n        console.log(\"pages: \", Math.ceil(sortedBooks.length / itemsPerPage))\n        const PaginationArray = new Array(Math.ceil(sortedBooks.length / itemsPerPage))\n        PaginationArray.fill(null)\n        return (\n            <div>\n                <FilterSortBar />\n                <Container>\n                    <div>\n                        <ButtonGroup>\n                            <Button color=\"primary\" onClick={()=>{\n                                this.setState({\n                                    view: \"cards\"\n                                })\n                            }} >Cards View</Button>\n                            <Button color=\"primary\"onClick={()=>{\n                                this.setState({\n                                    view: \"list\"\n                                })\n                            }} >List View</Button>\n                        </ButtonGroup>\n                    </div>\n\n                    <div className=\"books-holder\">\n                        {books}\n                    </div>\n\n                    <Pagination aria-label=\"Page navigation example\">\n                        <PaginationItem disabled={this.state.activePage === 1}>\n                            <PaginationLink first href=\"#\" onClick={(e) => {\n                                e.preventDefault()\n                                this.setState({\n                                    activePage: 1\n                                })\n                            }} />\n                        </PaginationItem>\n                        <PaginationItem disabled={this.state.activePage === 1}>\n                            <PaginationLink previous href=\"#\" onClick={(e) => {\n                                e.preventDefault()\n                                this.setState({\n                                    activePage: this.state.activePage - 1\n                                })\n                            }} />\n                        </PaginationItem>\n                        {\n                            PaginationArray.map((page, index) => {\n                                const pageNum = index + 1\n                                return <PaginationItem active={pageNum === this.state.activePage}>\n                                    <PaginationLink href=\"#\" onClick={(e) => {\n                                        e.preventDefault()\n                                        this.setState({ activePage: pageNum })\n                                    }} >\n                                        {pageNum}\n                                    </PaginationLink>\n                                </PaginationItem>\n                            })\n                        }\n                        <PaginationItem disabled={this.state.activePage === PaginationArray.length}>\n                            <PaginationLink next href=\"#\" onClick={(e) => {\n                                e.preventDefault()\n                                this.setState({\n                                    activePage: this.state.activePage + 1\n                                })\n                            }} />\n                        </PaginationItem>\n                        <PaginationItem disabled={this.state.activePage === PaginationArray.length}>\n                            <PaginationLink last href=\"#\" onClick={() => {\n                                this.setState({\n                                    activePage: PaginationArray.length\n                                })\n                            }} />\n                        </PaginationItem>\n                    </Pagination>\n                </Container>\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.books.data,\n        loading: state.books.loading,\n        filter: state.books.filter,\n        searchTerm: state.books.searchTerm,\n        sortTerm: state.books.sortTerm\n\n    }\n}\nconst mapDispatchToProps = {\n    getBooks\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\n\n\n","import * as Actions from \"./actionTypes\"\nimport axios from \"axios\"\nimport { apiHost } from \"../../../constants\"\n\nexport const addBook = (values, history) => {\n    return (dispacth) => {\n        axios.post(`${apiHost}/books`, values).then((result) => {\n            console.log(result.data)\n            dispacth({\n                type: Actions.ADD_BOOK,\n                payload: result.data\n            })\n            history.push(\"/react-bootcamp-bookshelf\")\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n}\nexport const editBook = (values, history, id) => {\n    return dispatch => {\n        axios.put(`${apiHost}/books/${id}`, values).then((result) => {\n            dispatch({ type: Actions.UPDATE_BOOKS, payload: result.data })\n            history.push(\"/react-bootcamp-bookshelf\");\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n};\n\n\n\nexport const getBooks = () => {\n    return dispatch => {\n        dispatch({\n            type: Actions.LOAD_BOOKS\n        })\n        axios.get(`${apiHost}/books`).then((result) => {\n            dispatch({\n                type: Actions.SET_BOOKS,\n                payload: result.data\n            })\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport const setFilter = (filter) => {\n    return dispatch => {\n        dispatch({\n            type: Actions.SET_FILTER,\n            payload: filter\n        })\n    }\n}\n\nexport const searchBooks = (searchTerm) => {\n    return dispatch => {\n        dispatch({\n            type: Actions.SEARCH_BOOKS,\n            payload: searchTerm\n        })\n    }\n}\nexport const sortBooks = (sortTerm) => {\n    return dispatch => {\n        dispatch({\n            type: Actions.SORT_BOOKS,\n            payload: sortTerm\n        })\n    }\n}","const SET_BOOKS = \"SET_BOOKS\"\nconst GET_BOOKS = \"GET_BOOKS\"\nconst ADD_BOOK = \"ADD_BOOK\"\nconst LOAD_BOOKS = \"LOAD_BOOKS\"\nconst SET_FILTER = \"SET_FILTER\"\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\"\nconst SORT_BOOKS = \"SORT_BOOKS\"\nconst UPDATE_BOOKS = \"UPDATE_BOOKS\"\n\nexport { SET_BOOKS, GET_BOOKS, ADD_BOOK, LOAD_BOOKS, SET_FILTER, SEARCH_BOOKS, SORT_BOOKS, UPDATE_BOOKS }","import HomePage from \"./HomePage\"\n\nexport default HomePage","import React from 'react';\nimport { AddBookForm } from \"../../components\"\nimport { Row, Col, Container } from 'reactstrap'\nimport axios from 'axios';\nimport { apiHost } from \"../../constants\"\n\n\nclass AddBook extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            book: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const id = this.props.routerProps.match.params.id\n        if (id) {\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\n                console.log(\"result: \", result)\n                this.setState({\n                    book:result.data\n                })\n            })\n        }\n    }\n\n\n    render() {\n        console.log(this.props)\n        const isEdit = this.props.componentProps.isEdit\n        const id = this.props.routerProps.match.params.id\n        console.log(id)\n        return (\n            <Container>\n                <Row>\n                    <Col xs={12}>\n                        {\n                            isEdit ? <h3>Edit Book</h3> : <h3>Add a new book</h3>\n                        }\n                    </Col>\n                    <Col>\n                        <AddBookForm isEdit={isEdit}  id={id} book={this.state.book} />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\nexport default AddBook;\n","import { HomePage,AddBook,BookDetails } from \"./containers\"\n\nconst routes = [\n    {\n        title: \"Home Page\",\n        path: \"/react-bootcamp-bookshelf\",\n        exact: true,\n        componentProps: {\n        },\n        component: HomePage\n    },\n    {\n        title: \"Add Book\",\n        path: \"/add-book\",\n        exact: false,\n        componentProps: {\n        },\n        component: AddBook\n    }, \n    {\n        title: \"Edit Book\",\n        path: \"/edit-book/:id\",\n        exact: false,\n        componentProps: {\n            isEdit: true\n        },\n        component: AddBook\n    },\n    {\n        title: \"Book Details\",\n        path: \"/book-details/:id\",\n        exact: false,\n        componentProps: {\n        },\n        component: BookDetails\n    }, \n]\nexport default routes","import React, { Component } from 'react';\nimport { BookInfos } from \"../../components\"\nimport axios from 'axios';\nimport { apiHost } from \"../../constants\"\nclass BookDetails extends Component {\n        // eslint-disable-next-line no-useless-constructor\n        constructor(props) {\n            super(props)\n    \n            this.state = {\n                book: \"\"\n            }\n        }\n\n    componentDidMount() {\n        const id = this.props.routerProps.match.params.id\n        if (id) {\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\n                console.log(\"result: \", result)\n                this.setState({\n                    book: result.data\n                })\n            })\n        }\n    }\n\n    render() {\n        console.log(this.props)\n        const selectedBooks = this.props.routerProps.match.params.id\n        console.log(\"s\",selectedBooks)\n        if(!this.state.book){\n        return <h2>{selectedBooks} books not found!</h2>\n        }\n        return (\n            <div>\n                {/* {this.state.book.title} */}\n                <BookInfos id={selectedBooks} book={this.state.book} />\n            </div>\n        );\n    }\n}\nexport default BookDetails","import MainLayout from \"./MainLayout\"\n\nexport default MainLayout","import React, { Component } from 'react'\n//import { Container } from \"reactstrap\"\n\nclass MainLayout extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n\n    }\n\n    //changes tab title\n    componentDidMount() {\n        const title = this.props.title;\n        document.title = title\n    }\n\n    render() {\n        console.log(this.props)\n\n        const Children = this.props.children\n        return (\n            <div>\n                <Children routerProps={this.props.routerProps} componentProps={this.props.componentProps} />\n            </div>\n        )\n    }\n}\n\nexport default MainLayout","import Main from \"./Main\"\n\nexport default Main","import React from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport routes from \"../../routes\"\nimport MainLayout from '../MainLayout'\n\nconst Main = () => {\n    return (\n        <div>\n            <Switch>\n                {\n                    routes.map((route) => {\n                        return <Route\n                            path={route.path}\n                            exact ={route.exact}\n                            component={(props)=>{\n                                const Comp = route.component\n                            return <MainLayout title = {route.title} routerProps={props} componentProps={route.componentProps}>{Comp}</MainLayout>\n                            }} />\n\n                    })\n                }\n            </Switch>\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport { Formik } from \"formik\"\nimport { categories, ratings, statuses } from \"../../constants\"\nimport * as Yup from \"yup\"\nimport { addBook, editBook } from \"../../state/ducks/books/actions\"\nimport { withRouter } from 'react-router';\n\n\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is a required field\"),\n    author: Yup.string().required(\"Author is a required field\"),\n    review: Yup.string().min(30, \"You can't enter less than 30 characters\")\n});\n\n\n\nconst AddBookForm = (props) => {\n    console.log(props);\n    let initialValues = {\n        title: \"\",\n        author: \"\",\n        category: \"JavaScript\",\n        description: \"\",\n        rating: \"5\",\n        imageUrl: \"\",\n        status: \"Not Read\",\n        review: \"\",\n        goodReads: \"\"\n    };\n    if (props.isEdit && props.book) {\n        initialValues = { ...props.book }\n    }\n    return (\n        <div>\n            <Formik initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values) => {\n                    props.isEdit ?\n                        props.editBook(values, props.history, props.id)\n                        : props.addBook(values, props.history)\n                }}\n                enableReinitialize={true}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id=\"title\"\n                                    placeholder=\"Name of the book\"\n                                    value={values.title}\n                                    onChange={handleChange}\n                                    invalid={errors.title}\n                                />\n                                {\n                                    errors.title && <FormFeedback>{errors.title}</FormFeedback>\n                                }\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"author\">Author</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"author\"\n                                    id=\"author\"\n                                    placeholder=\"author of the book\"\n                                    value={values.author}\n                                    onChange={handleChange}\n                                    invalid={errors.author}\n                                />\n                                {\n                                    errors.author && <FormFeedback>{errors.author}</FormFeedback>\n                                }\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"imageUrl\">Image URL</Label>\n                                <Input\n                                    type=\"url\"\n                                    name=\"imageUrl\"\n                                    id=\"imageUrl\"\n                                    placeholder=\"Image of the book\"\n                                    value={values.imageUrl}\n                                    onChange={handleChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Category</Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"category\"\n                                    id=\"category\"\n                                    value={values.category}\n                                    onChange={handleChange}\n                                >\n                                    {\n                                        categories.map((category) => {\n                                            return <option>{category}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"review\">Review</Label>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"review\"\n                                    id=\"review\"\n                                    value={values.review}\n                                    onChange={handleChange}\n                                    invalid={errors.review}\n                                />\n                                {\n                                    errors.review && <FormFeedback>{errors.review}</FormFeedback>\n                                }\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"\">Description</Label>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    id=\"description\"\n                                    value={values.description}\n                                    onChange={handleChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"goodReads\">Good Reads</Label>\n                                <Input\n                                    type=\"url\"\n                                    name=\"goodReads\"\n                                    id=\"goodReads\"\n                                    placeholder=\"Url for goodReads\"\n                                    value={values.goodReads}\n                                    onChange={handleChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Rating</Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"rating\"\n                                    id=\"rating\"\n                                    value={values.rating}\n                                    onChange={handleChange}\n                                >\n                                    {\n                                        ratings.map((score) => {\n                                            return <option>{score}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Status</Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"status\"\n                                    id=\"status\"\n                                    value={values.status}\n                                    onChange={handleChange}\n                                >\n                                    {\n                                        statuses.map((status) => {\n                                            return <option>{status}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n                            {\n                                props.isEdit ?\n                                    <Button color=\"primary\">Edit Book</Button>\n                                    : <Button color=\"primary\">Add Book</Button>\n\n                            }\n                        </Form>\n                    )}\n            </Formik>\n        </div>\n    )\n}\nconst mapDispatchToProps = {\n    addBook,\n    editBook\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm))\n","import AddBookForm from \"./AddBookForm\"\n\nexport default AddBookForm","import styled from \"styled-components\";\nimport { Card } from \"reactstrap\";\n\nexport const StyledBook = styled(Card)`\n    margin-bottom:25px;\n    height: 444px;\n            .card-img-top {\n                height:250px ;\n            \n    }\n`","import React from 'react'\nimport {\n    CardImg, CardText, CardBody, CardLink\n} from 'reactstrap';\nimport { StyledBook } from \"./BookStyles\"\nimport { Link } from 'react-router-dom';\n\nconst Book = (props) => {\n    //console.log(props)\n    const { imageUrl, title, rating, id,review, goodReads } = props\n    console.log(goodReads)\n    return (\n        <StyledBook>\n            <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n            <CardBody>\n            <CardLink>\n                    { \n                        goodReads && <a href={`${goodReads}`} target=\"_blank\" rel=\"noopener noreferrer\" >Good Reads</a>\n                        // <Link to={`${goodReads}`} target=\"_blank\">Good Reads</Link>\n                    }\n                </CardLink>\n                {\n                    review && <CardText>{review}</CardText>\n                }\n                <CardText>\n                    <strong>{`${rating} / 5`}</strong>\n                </CardText>\n                <CardText>{title}</CardText>\n                {/* <CardText>{description}</CardText> */}\n                <CardLink>\n                <Link to={`/book-details/${id}`}>Details</Link>\n                    </CardLink>\n                <CardLink>\n                    <Link to={`/edit-book/${id}`}>Edit book</Link>\n                    </CardLink>\n            </CardBody>\n        </StyledBook>\n\n    )\n}\n\nexport default Book\n","import React from 'react'\nimport Book from \"./Book\"\nimport { Row, Col } from 'reactstrap'\n\n\nconst Books = (props) => {\n    return (\n        <Row>\n        {\n            props.items.map((item) => {\n                return <Col xs={props.view ===\"cards\"? 6 : 12} md={props.view ===\"cards\"?4:12} lg={props.view ===\"cards\"?3:12}>\n                    <Book id={item.id} {...item}/>\n                </Col>\n            })\n        }\n    </Row>\n\n    )\n}\n\nexport default Books\n","import styled from \"styled-components\"\nimport { NavbarText, InputGroup } from \"reactstrap\"\n\nexport const StyledNavbarText = styled(NavbarText)`\n    margin-left:15px;\n    color: ${props => props.active ? \"#FF8247\" : \"#035491\"};\n    cursor: pointer;\n`\n\nexport const StyledInputGroup =  styled(InputGroup)`\ndisplay: inline-flex;\nwidth: 50%\n`","import React from 'react'\nimport { Nav, Container, Row, Col, InputGroupAddon, InputGroupText, Input } from 'reactstrap'\nimport { connect } from \"react-redux\"\nimport { StyledNavbarText,StyledInputGroup } from \"./FilterSortBarStyles\"\nimport { categories } from '../../constants';\nimport { setFilter, searchBooks, sortBooks } from '../../state/ducks/books/actions';\n\n\nconst FilterSortBar = (props) => {\n    return (\n        <div>\n\n            <Container fluid className=\"bg-white\" style={{padding:\"15px\"}}>\n                <Row>\n                    <Col xs={6}>\n                        <Nav>\n                            <StyledNavbarText> <strong>Categories:</strong> </StyledNavbarText>\n                            <StyledNavbarText active={!props.activeFilter} onClick={() => {\n                                props.changeFilter(\"\")\n                            }}> All </StyledNavbarText>\n                            {\n                                categories.map((category) => {\n                                    return <StyledNavbarText active={props.activeFilter === category}\n                                        onClick={() => {\n                                            props.changeFilter(category)\n                                        }}\n                                    >\n                                        {category}\n                                    </StyledNavbarText>\n                                })\n                            }\n                        </Nav>\n                    </Col>\n                    <Col xs={6}>\n                        <StyledInputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Search</InputGroupText>\n                            </InputGroupAddon>\n                            <Input placeholder=\"by Book or Author\" onChange={(e)=>{\n                                props.search(e.target.value)\n                            }} />\n                        </StyledInputGroup>\n                        \n                        <StyledInputGroup className=\"header-input\">\n                            <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e)=>{\n                                props.sort(e.target.value)\n                            }}>\n                                <option value=\"\">No Sort</option>\n                                {/* <option value=\"alphabetical\">Sort Alphabetical</option> */}\n                                <option value=\"rating\">Sort by Rating</option>\n                            </Input>\n                        </StyledInputGroup >\n                    </Col>\n                </Row>\n            </Container>\n\n        </div>\n\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        activeFilter: state.books.filter\n    }\n}\n\nconst mapDispatchToProps = {\n    changeFilter: setFilter,\n    search: searchBooks,\n    sort: sortBooks\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar)\n","import React from 'react'\n\nconst BookInfos = (props) => {\n    console.log(props)\n    return (\n        <div>\n            {props.book.category}\n            {props.book.title}\n            {props.book.author}\n            {props.book.description}\n\n            {props.book.goodReads}\n\n            {props.book.rating}\n\n            {props.book.review}\n\n\n\n        </div>\n    )\n}\n\nexport default BookInfos\n","import React from 'react';\nimport { Header, Main } from \"./components\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Actions from \"./actionTypes\"\n\nconst initialState = {\n    data: [],\n    loading: false,\n    filter: \"\",\n    searchTerm: \"\",\n    sortTerm: \"\"\n}\n\nconst booksReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Actions.ADD_BOOK:\n            return {\n                ...state,\n                data: [...state.data, action.payload]\n            }\n        case Actions.SET_BOOKS:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false\n            }\n        case Actions.LOAD_BOOKS:\n            return {\n                ...state,\n                loading: true\n            }\n        case Actions.SET_FILTER:\n            return {\n                ...state,\n                filter: action.payload\n            }\n        case Actions.SEARCH_BOOKS:\n            return {\n                ...state,\n                searchTerm: action.payload\n            }\n        case Actions.SORT_BOOKS:\n            return {\n                ...state,\n                sortTerm: action.payload\n            }\n            case Actions.UPDATE_BOOKS:\n                return {\n                    ...state,\n                    data: state.data.map((book) => {\n                        if(book.id=== action.payload.id){\n                            return action.payload\n                        }else{\n                            return book\n                        }\n                    })\n                }\n        default:\n            return state\n    }\n}\n\nexport default booksReducer","import reducers from \"./reducers\"\n\nexport default reducers","import * as reducers from \"./ducks\"\nimport {combineReducers, compose, createStore, applyMiddleware } from \"redux\"\nimport thunkMiddleWare from \"redux-thunk\"\n\n\nconst rootReducer = combineReducers(reducers)\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer,composeEnhancer(applyMiddleware(thunkMiddleWare)))\n\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport store from './state/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}