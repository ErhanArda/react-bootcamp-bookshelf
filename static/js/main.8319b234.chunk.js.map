{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/HomePage/HomePage.js","state/ducks/books/actions.js","state/ducks/books/actionTypes.js","containers/HomePage/index.js","routes.js","containers/AddBook/AddBook.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/Main/index.js","components/Main/Main.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/HomePage/BookStyles.js","components/HomePage/Book.js","components/HomePage/Books.js","components/HomePage/FilterSortBarStyles.js","components/HomePage/FilterSortBar.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","HomePage","props","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","length","items","Container","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","console","log","connect","state","routes","path","exact","component","Row","Col","xs","MainLayout","document","Children","children","Main","route","Comp","validationSchema","Yup","shape","required","author","addBook","values","history","dispacth","post","push","AddBookForm","withRouter","initialValues","description","rating","imageUrl","onSubmit","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","id","placeholder","value","onChange","invalid","FormFeedback","score","status","Button","StyledBook","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardText","CardLink","Books","item","md","lg","StyledNavbarText","active","changeFilter","activeFilter","App","Boolean","window","location","hostname","match","initialState","reducers","action","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8319b234.chunk.js","sourcesContent":["const navigation = {\n    left: [\n        {\n            title: \"Home Page\",\n            to: \"/\"\n        },\n        {\n            title: \"Read Books\",\n            to: \"/read-books\"\n        },\n    ],\n    right: [\n        {\n            title:\"+ Add Book\",\n            to:\"/add-book\"\n        }\n    ]\n}\n\n\nexport default navigation","import Header from \"./Header\"\n\nexport default Header","import React, { useState } from 'react';\nimport \"./styles\"\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText\n} from 'reactstrap';\nimport navigation from \"../../navigation\"\nimport { Link } from \"react-router-dom\"\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"md\">\n                <NavbarBrand tag={Link} to=\"/\">Bookshelf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        {\n                            navigation.left.map((nav) => {\n                                return <NavItem>\n                                    <NavLink tag={Link} to={nav.to}>{nav.title}</NavLink>\n                                </NavItem>\n                            }\n                            )\n                        }\n                    </Nav>\n                    {\n                        navigation.right.map((nav) => {\n                            return <NavbarText>\n                                <NavLink tag={Link} to={nav.to}>\n                                    {nav.title}\n                                </NavLink>\n                            </NavbarText>\n                        }\n                        )\n                    }\n                </Collapse>\n            </Navbar>\n        </div>\n\n    )\n}\n\nexport default Header\n","export const categories = [\n    \"JavaScript\",\n    \"HTML\",\n    \"CSS\",\n    \"Python\",\n    \"Java\"\n]\nexport const ratings = [1, 2, 3, 4, 5]\n\nexport const statuses = [\"Not Read\", \"Read\"]\n\nexport const apiHost =\"https://5ebaac0e3f97140016992b17.mockapi.io/\"","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Books, FilterSortBar } from \"../../components\"\nimport { getBooks } from \"../../state/ducks/books/actions\"\nimport { Container } from 'reactstrap'\n\nexport class HomePage extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.getBooks()\n    }\n\n\n    render() {\n        if (this.props.loading) {\n            return <h1>Books are loading...</h1>\n        }\n        //console.log(\"filter\",this.props.filter)\n        const allBooks = this.props.books;\n        let filteredBooks = []\n        if (this.props.filter) {\n            filteredBooks = allBooks.filter((book) => {\n                return book.category === this.props.filter\n            })\n        } else {\n            filteredBooks = allBooks\n        }\n\n        let books = \"\";\n        if (filteredBooks.length < 1) {\n            books = <h2>NO BOOK HERE</h2>\n        }\n        else {\n            books = <Books items={filteredBooks} />\n        }\n        return (\n            <div>\n                <FilterSortBar />\n                <Container>\n                    {books}\n                </Container>\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.books.data,\n        loading: state.books.loading,\n        filter: state.books.filter\n\n    }\n}\nconst mapDispatchToProps = {\n    getBooks\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\n\n\n","import * as Actions from \"./actionTypes\"\nimport axios from \"axios\"\nimport { apiHost } from \"../../../constants\"\n\nexport const addBook = (values,history) => {\n    return (dispacth) => {\n        axios.post(`${apiHost}/books`, values).then((result) => {\n            console.log(result.data)\n            dispacth({\n                type: Actions.ADD_BOOK,\n                payload: result.data\n            })\n            history.push(\"/\")\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport const getBooks = () => {\n    return dispatch => {\n        dispatch({\n            type:Actions.LOAD_BOOKS\n        })\n        axios.get(`${apiHost}/books`).then((result) => {\n            dispatch({\n                type: Actions.SET_BOOKS,\n                payload: result.data\n            })\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport const setFilter = (filter) => {\n    return dispatch => {\n        dispatch({\n            type: Actions.SET_FILTER,\n            payload:filter\n        })\n    }\n}","const SET_BOOKS = \"SET_BOOKS\"\nconst GET_BOOKS = \"GET_BOOKS\"\nconst ADD_BOOK = \"ADD_BOOK\"\nconst LOAD_BOOKS =\"LOAD_BOOKS\"\nconst SET_FILTER = \"SET_FILTER\"\n\nexport { SET_BOOKS, GET_BOOKS, ADD_BOOK,LOAD_BOOKS,SET_FILTER }","import HomePage from \"./HomePage\"\n\nexport default HomePage","import { HomePage } from \"./containers\"\nimport { AddBook } from \"./containers\"\n\nconst routes = [\n    {\n        title: \"Home Page\",\n        path: \"/\",\n        exact: true,\n        component: HomePage\n    },\n    {\n        title: \"Add Book\",\n        path: \"/add-book\",\n        exact: false,\n        component: AddBook\n    }\n]\nexport default routes","import React from 'react'\nimport { AddBookForm } from \"../../components\"\nimport { Row, Col, Container } from 'reactstrap'\n\nconst AddBook = () => {\n    return (\n        <Container>\n\n        <Row>\n            <Col xs={12}>\n                <h3>Add a new book</h3>\n            </Col>\n            <Col>\n                <AddBookForm />\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default AddBook\n","import MainLayout from \"./MainLayout\"\n\nexport default MainLayout","import React, { Component } from 'react'\nimport { Container } from \"reactstrap\"\n\nclass MainLayout extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props)\n\n    }\n\n    //changes tab title\n    componentDidMount() {\n        const title = this.props.title;\n        document.title = title\n    }\n\n    render() {\n        console.log(this.props)\n\n        const Children = this.props.children\n        return (\n            <div>\n                    <Children />\n            </div>\n        )\n    }\n}\n\nexport default MainLayout","import Main from \"./Main\"\n\nexport default Main","import React from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport routes from \"../../routes\"\nimport MainLayout from '../MainLayout'\n\nconst Main = () => {\n    return (\n        <div>\n            <Switch>\n                {\n                    routes.map((route) => {\n                        return <Route\n                            path={route.path}\n                            exact ={route.exact}\n                            component={()=>{\n                                const Comp = route.component\n                            return <MainLayout title = {route.title}>{Comp}</MainLayout>\n                            }} />\n\n                    })\n                }\n            </Switch>\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Form, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport { Formik } from \"formik\"\nimport { categories, ratings, statuses } from \"../../constants\"\nimport * as Yup from \"yup\"\nimport { addBook } from \"../../state/ducks/books/actions\"\nimport { withRouter } from 'react-router';\n\n\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is a required field\"),\n    author: Yup.string().required(\"Author is a required field\")\n});\n\nconst AddBookForm = (props) => {\n    return (\n        <div>\n            <Formik initialValues={{\n                title: \"\",\n                author: \"\",\n                category: \"\",\n                description: \"\",\n                rating: \"\",\n                imageUrl: \"\"\n            }}\n                validationSchema={validationSchema}\n                onSubmit={(values) => {\n                    console.log(\"values:\", values)\n                    props.addBook(values,props.history)\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id=\"title\"\n                                    placeholder=\"name of the book\"\n                                    value={values.title}\n                                    onChange={handleChange}\n                                    invalid={errors.title}\n                                />\n                                {\n                                    errors.title && <FormFeedback>{errors.title}</FormFeedback>\n\n                                }\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"author\">Author</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"author\"\n                                    id=\"author\"\n                                    placeholder=\"author of the book\"\n                                    value={values.author}\n                                    onChange={handleChange}\n                                    invalid={errors.author}\n                                />\n                                {\n                                    errors.author && <FormFeedback>{errors.author}</FormFeedback>\n                                }\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"imageUrl\">Image URL</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"imageUrl\"\n                                    id=\"imageUrl\"\n                                    placeholder=\"image of the book\"\n                                    value={values.imageUrl}\n                                    onChange={handleChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Category</Label>\n                                <Input type=\"select\" name=\"category\" id=\"category\" value={values.category} onChange={handleChange}>\n                                    {\n                                        categories.map((category) => {\n                                            return <option>{category}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"\">Description</Label>\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" value={values.description} onChange={handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Rating</Label>\n                                <Input type=\"select\" name=\"rating\" id=\"rating\" value={values.rating} onChange={handleChange} >\n                                    {\n                                        ratings.map((score) => {\n                                            return <option>{score}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelect\">Status</Label>\n                                <Input type=\"select\" name=\"status\" id=\"status\" value={values.status} onChange={handleChange}>\n                                    {\n                                        statuses.map((status) => {\n                                            return <option>{status}</option>\n                                        })\n                                    }\n                                </Input>\n                            </FormGroup>\n                            <Button color=\"primary\">Add Book</Button>\n                        </Form>\n                    )}\n\n            </Formik>\n        </div>\n    )\n}\nconst mapDispatchToProps = {\n    addBook\n}\n\nexport default withRouter(connect(null,mapDispatchToProps)(AddBookForm))\n","import AddBookForm from \"./AddBookForm\"\n\nexport default AddBookForm","import styled from \"styled-components\";\nimport { Card } from \"reactstrap\";\n\nexport const StyledBook = styled(Card)`\n    margin:25px 0 25px 0;\n    height: 444px;\n            .card-img-top {\n                height:250px ;\n            \n    }\n`","import React from 'react'\nimport {\n    CardImg, CardText, CardBody, CardLink\n} from 'reactstrap';\nimport {StyledBook} from \"./BookStyles\"\n\nconst Book = (props) => {\n    //console.log(props)\n    const { imageUrl, title, rating } = props\n    return (\n        <StyledBook>\n                <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n                <CardBody>\n                    <CardText>\n                        <strong>{`${rating} / 5`}</strong>\n                    </CardText>\n                    <CardText>{title}</CardText>\n                    {/* <CardText>{description}</CardText> */}\n                    <CardLink>\n                        Details\n                    </CardLink>\n                    <CardLink>\n                        Edit Book\n                    </CardLink>\n                </CardBody>\n        </StyledBook>\n\n    )\n}\n\nexport default Book\n","import React from 'react'\nimport Book from \"./Book\"\nimport { Row, Col } from 'reactstrap'\n\n\nconst Books = (props) => {\n    return (\n        <Row>\n        {\n            props.items.map((item) => {\n                return <Col xs={6} md={4} lg={3}>\n                    <Book {...item}/>\n                </Col>\n            })\n        }\n    </Row>\n\n    )\n}\n\nexport default Books\n","import styled from \"styled-components\"\nimport { NavbarText } from \"reactstrap\"\n\nexport const StyledNavbarText = styled(NavbarText)`\n    margin-left:15px;\n    color: ${props => props.active ? \"#FF8247\" : \"#035491\"};\n    cursor: pointer;\n`","import React from 'react'\nimport { Nav } from 'reactstrap'\nimport { connect } from \"react-redux\"\nimport { StyledNavbarText } from \"./FilterSortBarStyles\"\nimport { categories } from '../../constants';\nimport { setFilter } from '../../state/ducks/books/actions';\n\n\nconst FilterSortBar = (props) => {\n    return (\n        <div>\n            <Nav className=\"bg-white\">\n                <StyledNavbarText> <strong>Categories:</strong> </StyledNavbarText>\n                <StyledNavbarText active={!props.activeFilter} onClick={() => {\n                    props.changeFilter(\"\")\n                }}> All </StyledNavbarText>\n                {\n                    categories.map((category) => {\n                        return <StyledNavbarText active={props.activeFilter === category}\n                            onClick={() => {\n                                props.changeFilter(category)\n                            }}\n                        >\n                            {category}\n                        </StyledNavbarText>\n                    })\n                }\n            </Nav>\n        </div>\n\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        activeFilter: state.books.filter\n    }\n}\n\nconst mapDispatchToProps = {\n    changeFilter: setFilter\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar)\n","import React from 'react';\nimport { Header, Main } from \"./components\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Actions from \"./actionTypes\"\n\nconst initialState = {\n    data: [],\n    loading: false,\n    filter:\"\"\n}\n\nconst booksReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Actions.ADD_BOOK:\n            return {\n                ...state,\n                data: [...state.data, action.payload]\n            }\n        case Actions.SET_BOOKS:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false\n            }\n        case Actions.LOAD_BOOKS:\n            return {\n                ...state,\n                loading:true\n            }\n        case Actions.SET_FILTER:\n            return {\n                ...state,\n                filter:action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default booksReducer","import reducers from \"./reducers\"\n\nexport default reducers","import * as reducers from \"./ducks\"\nimport {combineReducers, compose, createStore, applyMiddleware } from \"redux\"\nimport thunkMiddleWare from \"redux-thunk\"\n\n\nconst rootReducer = combineReducers(reducers)\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer,composeEnhancer(applyMiddleware(thunkMiddleWare)))\n\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport store from './state/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}